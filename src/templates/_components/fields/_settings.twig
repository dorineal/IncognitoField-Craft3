{% import '_includes/forms' as _forms %}

{% macro info(text) -%}
    <span class="info">{{ text|md }}</span>
{%- endmacro %}

{% from _self import info %}

<style>
    .info-hud {
        max-width: 520px;
    }
    .info-hud code {
        padding: 2px 0;
        background: #f1f5f8;
        overflow: auto;
    }
    .info-hud pre {
        padding: 1px 4px;
        background: #f1f5f8;
        overflow: hidden;
    }
</style>

{# Mode #}
{{ _forms.field({
    label: "Mode"|t('incognito-field'),
    instructions: "Select the rendering mode for this field in element edit forms."|t('incognito-field'),
    id: 'mode',
}, _forms.select({
    id: 'mode',
    name: 'mode',
    options: modes,
    value: field.mode|default('plain')
})) }}

{# Override Mode #}
{% set overrideModeInfo %}
{% verbatim %}
You can use Twig to override the default rendering mode for this field. Note that your code must return a string of either `plain`, `disabled`, `hidden`, or `readonly`. **Examples:**

Render as an editable PlainText field if the element is an unsaved draft:

    {{ element.getIsUnsavedDraft() ? 'plain' }}

Render as an editable PlainText field for admin users:

    {{ currentUser.admin ? 'plain' }}

Render as a visible, read-only field for users in a particular user group:

    {{ currentUser.isInGroup('editors') ? 'readonly' }}

Render as an editable PlainText field for users that have _edit site permissions_ for a particular site:

    {% set site = craft.app.sites.getSiteByHandle('germany') %}
    {{ currentUser.can('editSite:' ~ site.uid) ? 'plain' }}
{% endverbatim %}
{% endset %}

{{ _forms.textareaField({
    label: 'Mode Override {info}'|t('incognito-field', { info: info(overrideModeInfo) }),
    instructions: 'Use Twig to override the default rendering mode'|t('incognito-field'),
    id: 'modeOverride',
    class: 'code',
    name: 'modeOverride',
    rows: 3,
    value: field.modeOverride
}) }}

<hr>

{% include '_components/fieldtypes/PlainText/settings' %}

